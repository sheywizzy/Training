trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- script: echo K8s Terraform Azure!
  displayName: 'Run a one-line script'

- task: DownloadSecureFile@1
  name: Publickey
  inputs:
    secureFile: 'azure_rsa.pub'
- task: AzureCLI@2
  displayName: 'Create a Storage Account if not exist'
  inputs:
    azureSubscription: 'azure-resource-manager-service-connection'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      RG_NAME=Terraform-Backend-rg
      LOCATION=East US
      STORAGE_ACCOUNT_NAME=storageaccountterra

      echo "Checking if resource group exists..."
      if ! az group exists --name $RG_NAME ; then
        echo "Creating resource group..."
        az group create --name $RG_NAME --location "$LOCATION"
      fi

      echo "Checking if storage account exists..."
      if ! az storage account check-name --name $STORAGE_ACCOUNT_NAME --query nameAvailable --output tsv ; then
        echo "Creating storage account..."
        az storage account create --name $STORAGE_ACCOUNT_NAME --resource-group $RG_NAME --location "$LOCATION" --sku Standard_LRS
      fi

- task: TerraformCLI@0
  inputs:
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes'
    commandOptions: '-var client_id=$(client_id) -var client_secret=$(client_secret) -var ssh_public_key=$(Publickey.secureFilePath)'
    backendType: 'azurerm'
    backendServiceArm: 'azure-resource-manager-service-connection'
    ensureBackend: true
    backendAzureRmResourceGroupName: 'Terraform-Backend-rg'
    backendAzureRmResourceGroupLocation: 'East US'
    backendAzureRmStorageAccountName: 'storageaccountterra'
    backendAzureRmContainerName: 'storageaccountcontainer'
    backendAzureRmKey: 'kubernetes-dev.tfstate'
    allowTelemetryCollection: true